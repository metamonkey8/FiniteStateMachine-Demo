{"ast":null,"code":"class FiniteStateMachine {\n  constructor() {\n    this.states = new Set();\n    this.transitions = new Map();\n    this.currentState = null;\n  }\n  addState(state) {\n    this.states.add(state);\n    if (!this.currentState) {\n      this.currentState = state;\n    }\n  }\n  addTransition(fromState, toState, event) {\n    if (!this.states.has(fromState) || !this.states.has(toState)) {\n      throw new Error('States not defined');\n    }\n    if (!this.transitions.has(fromState)) {\n      this.transitions.set(fromState, new Map());\n    }\n    this.transitions.get(fromState).set(event, toState);\n  }\n  handleEvent(event) {\n    if (!this.currentState) {\n      throw new Error('No current state defined');\n    }\n    const transitions = this.transitions.get(this.currentState);\n    console.log(this.currentState);\n    if (!transitions || !transitions.has(event)) {\n      throw new Error('Invalid event for current state');\n    }\n    this.currentState = transitions.get(event);\n  }\n}\nexport { FiniteStateMachine };","map":{"version":3,"names":["FiniteStateMachine","constructor","states","Set","transitions","Map","currentState","addState","state","add","addTransition","fromState","toState","event","has","Error","set","get","handleEvent","console","log"],"sources":["/Users/michaelchen/Desktop/Intuit-Mailchimp/fsm-assignment/src/FiniteStateMachine.js"],"sourcesContent":["class FiniteStateMachine {\n    constructor() {\n      this.states = new Set();\n      this.transitions = new Map();\n      this.currentState = null;\n    }\n  \n    addState(state) {\n      this.states.add(state);\n      if (!this.currentState) {\n        this.currentState = state;\n      }\n    }\n  \n    addTransition(fromState, toState, event) {\n      if (!this.states.has(fromState) || !this.states.has(toState)) {\n        throw new Error('States not defined');\n      }\n      if (!this.transitions.has(fromState)) {\n        this.transitions.set(fromState, new Map());\n      }\n      this.transitions.get(fromState).set(event, toState);\n    }\n  \n    handleEvent(event) {\n      if (!this.currentState) {\n        throw new Error('No current state defined');\n      }\n      const transitions = this.transitions.get(this.currentState);\n      console.log(this.currentState);\n      if (!transitions || !transitions.has(event)) {\n        throw new Error('Invalid event for current state');\n      }\n      this.currentState = transitions.get(event);\n    }\n  }\n  \n  export { FiniteStateMachine };"],"mappings":"AAAA,MAAMA,kBAAkB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;IACvB,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEAC,QAAQA,CAACC,KAAK,EAAE;IACd,IAAI,CAACN,MAAM,CAACO,GAAG,CAACD,KAAK,CAAC;IACtB,IAAI,CAAC,IAAI,CAACF,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,GAAGE,KAAK;IAC3B;EACF;EAEAE,aAAaA,CAACC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACvC,IAAI,CAAC,IAAI,CAACX,MAAM,CAACY,GAAG,CAACH,SAAS,CAAC,IAAI,CAAC,IAAI,CAACT,MAAM,CAACY,GAAG,CAACF,OAAO,CAAC,EAAE;MAC5D,MAAM,IAAIG,KAAK,CAAC,oBAAoB,CAAC;IACvC;IACA,IAAI,CAAC,IAAI,CAACX,WAAW,CAACU,GAAG,CAACH,SAAS,CAAC,EAAE;MACpC,IAAI,CAACP,WAAW,CAACY,GAAG,CAACL,SAAS,EAAE,IAAIN,GAAG,CAAC,CAAC,CAAC;IAC5C;IACA,IAAI,CAACD,WAAW,CAACa,GAAG,CAACN,SAAS,CAAC,CAACK,GAAG,CAACH,KAAK,EAAED,OAAO,CAAC;EACrD;EAEAM,WAAWA,CAACL,KAAK,EAAE;IACjB,IAAI,CAAC,IAAI,CAACP,YAAY,EAAE;MACtB,MAAM,IAAIS,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,MAAMX,WAAW,GAAG,IAAI,CAACA,WAAW,CAACa,GAAG,CAAC,IAAI,CAACX,YAAY,CAAC;IAC3Da,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,YAAY,CAAC;IAC9B,IAAI,CAACF,WAAW,IAAI,CAACA,WAAW,CAACU,GAAG,CAACD,KAAK,CAAC,EAAE;MAC3C,MAAM,IAAIE,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACA,IAAI,CAACT,YAAY,GAAGF,WAAW,CAACa,GAAG,CAACJ,KAAK,CAAC;EAC5C;AACF;AAEA,SAASb,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}