{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchen/Desktop/Intuit-Mailchimp/fsm-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FiniteStateMachine } from './FiniteStateMachine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentFloor, setCurrentFloor] = useState(1);\n  const [currentState, setCurrentState] = useState('idle');\n  const fsm = new FiniteStateMachine();\n  fsm.addState('idle');\n  fsm.addState('moving');\n  fsm.addState('doorOpening');\n  fsm.addState('doorClosing');\n  fsm.addTransition('idle', 'moving', 'CALL_ELEVATOR');\n  fsm.addTransition('moving', 'doorOpening', 'ARRIVED_AT_FLOOR');\n  fsm.addTransition('doorOpening', 'idle', 'DOOR_OPENED');\n  fsm.addTransition('idle', 'doorClosing', 'DOOR_CLOSE');\n  fsm.addTransition('doorClosing', 'moving', 'DOOR_CLOSED');\n  const callElevator = () => {\n    fsm.handleEvent('CALL_ELEVATOR');\n    setCurrentState(fsm.currentState);\n  };\n  const arriveAtFloor = floor => {\n    setCurrentFloor(floor);\n    fsm.handleEvent('ARRIVED_AT_FLOOR');\n    setCurrentState(fsm.currentState);\n  };\n  const openDoor = () => {\n    fsm.handleEvent('DOOR_OPENED');\n    setCurrentState(fsm.currentState);\n  };\n  const closeDoor = () => {\n    fsm.handleEvent('DOOR_CLOSED');\n    setCurrentState(fsm.currentState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Elevator Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Floor: \", currentFloor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Elevator State: \", currentState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currentState === 'idle' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callElevator,\n      children: \"Call Elevator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), currentState === 'moving' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => arriveAtFloor(3),\n      children: \"Simulate Arrival at Floor 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), currentState === 'doorOpening' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openDoor,\n      disabled: true,\n      children: \"Opening Door...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), currentState === 'doorClosing' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: closeDoor,\n      disabled: true,\n      children: \"Closing Door...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JbSQdymY5ZW2/MQBioFMkbr8SxA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FiniteStateMachine","jsxDEV","_jsxDEV","App","_s","currentFloor","setCurrentFloor","currentState","setCurrentState","fsm","addState","addTransition","callElevator","handleEvent","arriveAtFloor","floor","openDoor","closeDoor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/michaelchen/Desktop/Intuit-Mailchimp/fsm-assignment/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FiniteStateMachine } from './FiniteStateMachine';\n\nconst App = () => {\n  const [currentFloor, setCurrentFloor] = useState(1);\n  const [currentState, setCurrentState] = useState('idle');\n\n  const fsm = new FiniteStateMachine();\n  fsm.addState('idle');\n  fsm.addState('moving');\n  fsm.addState('doorOpening');\n  fsm.addState('doorClosing');\n  fsm.addTransition('idle', 'moving', 'CALL_ELEVATOR');\n  fsm.addTransition('moving', 'doorOpening', 'ARRIVED_AT_FLOOR');\n  fsm.addTransition('doorOpening', 'idle', 'DOOR_OPENED');\n  fsm.addTransition('idle', 'doorClosing', 'DOOR_CLOSE');\n  fsm.addTransition('doorClosing', 'moving', 'DOOR_CLOSED');\n\n  const callElevator = () => {\n    fsm.handleEvent('CALL_ELEVATOR');\n    setCurrentState(fsm.currentState);\n  };\n\n  const arriveAtFloor = (floor) => {\n    setCurrentFloor(floor);\n    fsm.handleEvent('ARRIVED_AT_FLOOR');\n    setCurrentState(fsm.currentState);\n  };\n\n  const openDoor = () => {\n    fsm.handleEvent('DOOR_OPENED');\n    setCurrentState(fsm.currentState);\n  };\n\n  const closeDoor = () => {\n    fsm.handleEvent('DOOR_CLOSED');\n    setCurrentState(fsm.currentState);\n  };\n\n  return (\n    <div>\n      <h1>Elevator Simulation</h1>\n      <p>Current Floor: {currentFloor}</p>\n      <p>Elevator State: {currentState}</p>\n      {currentState === 'idle' && (\n        <button onClick={callElevator}>Call Elevator</button>\n      )}\n      {currentState === 'moving' && (\n        <button onClick={() => arriveAtFloor(3)}>Simulate Arrival at Floor 3</button>\n      )}\n      {currentState === 'doorOpening' && (\n        <button onClick={openDoor} disabled>Opening Door...</button>\n      )}\n      {currentState === 'doorClosing' && (\n        <button onClick={closeDoor} disabled>Closing Door...</button>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}